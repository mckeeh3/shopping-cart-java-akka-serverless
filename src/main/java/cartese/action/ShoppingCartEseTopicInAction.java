/* This code was generated by Akka Serverless tooling.
 * As long as this file exists it will not be re-generated.
 * You are free to make changes to this file.
 */

package cartese.action;

import com.akkaserverless.javasdk.ServiceCallRef;
import com.akkaserverless.javasdk.action.ActionCreationContext;
import com.google.protobuf.Empty;

import cartese.api.ShoppingCartEseApi;
import cartese.api.ShoppingCartEseApi.AddLineItem;
import cartese.api.ShoppingCartEseApi.ChangeLineItemQuantity;
import cartese.api.ShoppingCartEseApi.CheckoutShoppingCart;
import cartese.api.ShoppingCartEseApi.RemoveLineItem;
import cartese.api.ShoppingCartEseApi.RemoveShoppingCart;
import cartese.entity.ShoppingCartEse;

public class ShoppingCartEseTopicInAction extends AbstractShoppingCartEseTopicInAction {
  private final ActionCreationContext creationContext;

  public ShoppingCartEseTopicInAction(ActionCreationContext creationContext) {
    this.creationContext = creationContext;
  }

  @Override
  public Effect<Empty> addItem(ShoppingCartEseActionTopicIn.AddLineItem addLineItem) {
    return effects().forward(addItemRef().createCall(toApi(addLineItem)));
  }

  @Override
  public Effect<Empty> changeItem(ShoppingCartEseActionTopicIn.ChangeLineItemQuantity changeLineItemQuantity) {
    return effects().forward(changeItemRef().createCall(toApi(changeLineItemQuantity)));
  }

  @Override
  public Effect<Empty> removeItem(ShoppingCartEseActionTopicIn.RemoveLineItem removeLineItem) {
    return effects().forward(removeItemRef().createCall(toApi(removeLineItem)));
  }

  @Override
  public Effect<Empty> checkoutCart(ShoppingCartEseActionTopicIn.CheckoutShoppingCart checkoutShoppingCart) {
    return effects().forward(checkoutCartRef().createCall(toApi(checkoutShoppingCart)));
  }

  @Override
  public Effect<Empty> removeCart(ShoppingCartEseActionTopicIn.RemoveShoppingCart removeShoppingCart) {
    return effects().forward(removeCartRef().createCall(toApi(removeShoppingCart)));
  }

  private static AddLineItem toApi(ShoppingCartEseActionTopicIn.AddLineItem addLineItem) {
    return ShoppingCartEseApi.AddLineItem
        .newBuilder()
        .setCustomerId(addLineItem.getCustomerId())
        .setCartId(addLineItem.getCartId())
        .setProductId(addLineItem.getProductId())
        .setName(addLineItem.getName())
        .setQuantity(addLineItem.getQuantity())
        .build();
  }

  private static ChangeLineItemQuantity toApi(ShoppingCartEseActionTopicIn.ChangeLineItemQuantity changeLineItemQuantity) {
    return ShoppingCartEseApi.ChangeLineItemQuantity
        .newBuilder()
        .setCartId(changeLineItemQuantity.getCartId())
        .setProductId(changeLineItemQuantity.getProductId())
        .setQuantity(changeLineItemQuantity.getQuantity())
        .build();
  }

  private static RemoveLineItem toApi(ShoppingCartEseActionTopicIn.RemoveLineItem removeLineItem) {
    return ShoppingCartEseApi.RemoveLineItem
        .newBuilder()
        .setCartId(removeLineItem.getCartId())
        .setProductId(removeLineItem.getProductId())
        .build();
  }

  private static CheckoutShoppingCart toApi(ShoppingCartEseActionTopicIn.CheckoutShoppingCart checkoutShoppingCart) {
    return ShoppingCartEseApi.CheckoutShoppingCart
        .newBuilder()
        .setCartId(checkoutShoppingCart.getCartId())
        .build();
  }

  private static RemoveShoppingCart toApi(ShoppingCartEseActionTopicIn.RemoveShoppingCart removeShoppingCart) {
    return ShoppingCartEseApi.RemoveShoppingCart
        .newBuilder()
        .setCartId(removeShoppingCart.getCartId())
        .build();
  }

  private ServiceCallRef<ShoppingCartEseApi.AddLineItem> addItemRef() {
    return creationContext.serviceCallFactory()
        .lookup(ShoppingCartEse.class.getName(), "addItem", ShoppingCartEseApi.AddLineItem.class);
  }

  private ServiceCallRef<ShoppingCartEseApi.ChangeLineItemQuantity> changeItemRef() {
    return creationContext.serviceCallFactory()
        .lookup(ShoppingCartEse.class.getName(), "changeItem", ShoppingCartEseApi.ChangeLineItemQuantity.class);
  }

  private ServiceCallRef<ShoppingCartEseApi.RemoveLineItem> removeItemRef() {
    return creationContext.serviceCallFactory()
        .lookup(ShoppingCartEse.class.getName(), "removeItem", ShoppingCartEseApi.RemoveLineItem.class);
  }

  private ServiceCallRef<ShoppingCartEseApi.CheckoutShoppingCart> checkoutCartRef() {
    return creationContext.serviceCallFactory()
        .lookup(ShoppingCartEse.class.getName(), "checkoutCart", ShoppingCartEseApi.CheckoutShoppingCart.class);
  }

  private ServiceCallRef<ShoppingCartEseApi.RemoveShoppingCart> removeCartRef() {
    return creationContext.serviceCallFactory()
        .lookup(ShoppingCartEse.class.getName(), "removeCart", ShoppingCartEseApi.RemoveShoppingCart.class);
  }
}
