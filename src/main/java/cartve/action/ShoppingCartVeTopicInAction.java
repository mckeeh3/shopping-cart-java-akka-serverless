/* This code was generated by Akka Serverless tooling.
 * As long as this file exists it will not be re-generated.
 * You are free to make changes to this file.
 */
package cartve.action;

import com.akkaserverless.javasdk.action.ActionCreationContext;
import com.google.protobuf.Empty;

import cartve.api.ShoppingCartVeApi;

public class ShoppingCartVeTopicInAction extends AbstractShoppingCartVeTopicInAction {
  public ShoppingCartVeTopicInAction(ActionCreationContext creationContext) {
  }

  @Override
  public Effect<Empty> addItem(ShoppingCartVeActionTopicIn.AddLineItem addLineItem) {
    return effects().forward(components().shoppingCartVe().addItem(toApi(addLineItem)));
  }

  @Override
  public Effect<Empty> changeItem(ShoppingCartVeActionTopicIn.ChangeLineItemQuantity changeLineItemQuantity) {
    return effects().forward(components().shoppingCartVe().changeItem(toApi(changeLineItemQuantity)));
  }

  @Override
  public Effect<Empty> removeItem(ShoppingCartVeActionTopicIn.RemoveLineItem removeLineItem) {
    return effects().forward(components().shoppingCartVe().removeItem(toApi(removeLineItem)));
  }

  @Override
  public Effect<Empty> checkoutCart(ShoppingCartVeActionTopicIn.CheckoutShoppingCart checkoutShoppingCart) {
    return effects().forward(components().shoppingCartVe().checkoutCart(toApi(checkoutShoppingCart)));
  }

  @Override
  public Effect<Empty> removeCart(ShoppingCartVeActionTopicIn.RemoveShoppingCart removeShoppingCart) {
    return effects().forward(components().shoppingCartVe().removeCart(toApi(removeShoppingCart)));
  }

  private static ShoppingCartVeApi.AddLineItem toApi(ShoppingCartVeActionTopicIn.AddLineItem addLineItem) {
    return ShoppingCartVeApi.AddLineItem
        .newBuilder()
        .setCartId(addLineItem.getCartId())
        .setCustomerId(addLineItem.getCustomerId())
        .setProductId(addLineItem.getProductId())
        .setName(addLineItem.getName())
        .setQuantity(addLineItem.getQuantity())
        .build();
  }

  private static ShoppingCartVeApi.ChangeLineItemQuantity toApi(ShoppingCartVeActionTopicIn.ChangeLineItemQuantity changeLineItemQuantity) {
    return ShoppingCartVeApi.ChangeLineItemQuantity
        .newBuilder()
        .setCartId(changeLineItemQuantity.getCartId())
        .setProductId(changeLineItemQuantity.getProductId())
        .setQuantity(changeLineItemQuantity.getQuantity())
        .build();
  }

  private static ShoppingCartVeApi.RemoveLineItem toApi(ShoppingCartVeActionTopicIn.RemoveLineItem removeLineItem) {
    return ShoppingCartVeApi.RemoveLineItem
        .newBuilder()
        .setCartId(removeLineItem.getCartId())
        .setProductId(removeLineItem.getProductId())
        .build();
  }

  private static ShoppingCartVeApi.CheckoutShoppingCart toApi(ShoppingCartVeActionTopicIn.CheckoutShoppingCart checkoutShoppingCart) {
    return ShoppingCartVeApi.CheckoutShoppingCart
        .newBuilder()
        .setCartId(checkoutShoppingCart.getCartId())
        .build();
  }

  private static ShoppingCartVeApi.RemoveShoppingCart toApi(ShoppingCartVeActionTopicIn.RemoveShoppingCart removeShoppingCart) {
    return ShoppingCartVeApi.RemoveShoppingCart
        .newBuilder()
        .setCartId(removeShoppingCart.getCartId())
        .build();
  }
}
